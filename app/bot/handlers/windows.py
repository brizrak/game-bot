from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext

from app.bot.utils.models import UserData
from app.bot.handlers.delete_message import delete_previous_message, add_message
from app.bot.handlers.states import GlobalStates


def game_choice(text: str) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder().row(
        *[
            InlineKeyboardButton(text="–î–≤–∞–¥—Ü–∞—Ç—å –æ–¥–Ω–æ", callback_data=f"{text}_21"),
            InlineKeyboardButton(text="–ú–æ—Ä—Å–∫–æ–π –±–æ–π", callback_data=f"{text}_sea"),
            InlineKeyboardButton(text="–î—É—Ä–∞–∫", callback_data=f"{text}_fool"),
        ], width=1
    )
    return builder.as_markup()


class Window:
    @staticmethod
    async def main_menu(message: Message, user_data: UserData, state: FSMContext, is_command: bool = False) -> None:
        text = f"–ü—Ä–∏–≤–µ—Çüñê\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: {user_data.balance}\n–í–∞—à —Å—á–µ—Ç: {user_data.score}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:"
        reply_markup = game_choice("game")
        msg = await message.answer(text=text, reply_markup=reply_markup)
        await delete_previous_message(state, message)
        await add_message(state, msg)
        if is_command:
            await message.delete()

    @staticmethod
    async def stats(message: Message, user_data: UserData, state: FSMContext) -> None:
        text = (f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
                f"\n\n–î–≤–∞–¥—Ü–∞—Ç—å –æ–¥–Ω–æ:"
                f"\n\t–í—Å–µ–≥–æ –∏–≥—Ä: {user_data.blackjack_stats.total_games}"
                f"\n\t–ü–æ–±–µ–¥: {user_data.blackjack_stats.wins}"
                f"\n\t–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {user_data.blackjack_stats.loses}"
                f"\n\t–ù–∏—á—å–∏—Ö: {user_data.blackjack_stats.draws}"
                f"\n\n–ú–æ—Ä—Å–∫–æ–π –±–æ–π:"
                f"\n\t–í—Å–µ–≥–æ –∏–≥—Ä: {user_data.seabattle_stats.total_games}"
                f"\n\t–ü–æ–±–µ–¥: {user_data.seabattle_stats.wins}"
                f"\n\t–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {user_data.seabattle_stats.loses}"
                f"\n\t–ù–∏—á—å–∏—Ö: {user_data.seabattle_stats.draws}"
                f"\n\n–î—É—Ä–∞–∫:"
                f"\n\t–í—Å–µ–≥–æ –∏–≥—Ä: {user_data.fool_stats.total_games}"
                f"\n\t–ü–æ–±–µ–¥: {user_data.fool_stats.wins}"
                f"\n\t–ü–æ—Ä–∞–∂–µ–Ω–∏–π: {user_data.fool_stats.loses}"
                f"\n\t–ù–∏—á—å–∏—Ö: {user_data.fool_stats.draws}")
        msg = await message.answer(text=text)
        await delete_previous_message(state, message)
        await add_message(state, msg)
        await message.delete()

    @staticmethod
    async def rules(message: Message, state: FSMContext) -> None:
        text = f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:"
        reply_markup = game_choice("rule")
        msg = await message.answer(text=text, reply_markup=reply_markup)
        await delete_previous_message(state, message)
        await state.update_data(old_message=msg.message_id)
        await message.delete()

    @staticmethod
    async def sea_rules(message: Message, state: FSMContext) -> None:
        await delete_previous_message(state, message)
        text = ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–æ—Ä—Å–∫–æ–π –ë–æ–π!"
                "\n\n–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:"
                "\n1.  –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å–µ—Ç–∫—É 10x10, –≥–¥–µ —Å—Ç—Ä–æ–∫–∏ –æ–±–æ–∑–Ω–∞—á–µ–Ω—ã —Ü–∏—Ñ—Ä–∞–º–∏ (1-10), –∞ —Å—Ç–æ–ª–±—Ü—ã - –±—É–∫–≤–∞–º–∏ (A-J)."
                "\n2.  –ù–∞ –∫–∞–∂–¥–æ–º –ø–æ–ª–µ —Ä–∞–∑–º–µ—â–µ–Ω—ã –∫–æ—Ä–∞–±–ª–∏ —Ä–∞–∑–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤: 1 –∫–æ—Ä–∞–±–ª—å –¥–ª–∏–Ω–æ–π 4 –∫–ª–µ—Ç–∫–∏, 2 –∫–æ—Ä–∞–±–ª—è –¥–ª–∏–Ω–æ–π 3 –∫–ª–µ—Ç–∫–∏, 3 –∫–æ—Ä–∞–±–ª—è –¥–ª–∏–Ω–æ–π 2 –∫–ª–µ—Ç–∫–∏ –∏ 4 –∫–æ—Ä–∞–±–ª—è –¥–ª–∏–Ω–æ–π 1 –∫–ª–µ—Ç–∫–∞."
                "\n3.  –¶–µ–ª—å –∏–≥—Ä—ã - –ø–µ—Ä–≤—ã–º –ø–æ—Ç–æ–ø–∏—Ç—å –≤—Å–µ –∫–æ—Ä–∞–±–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞."
                "\n4.  –ò–≥—Ä–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –≤—ã—Å—Ç—Ä–µ–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, A1, B5, J10)."
                "\n5.  –ï—Å–ª–∏ –≤—ã—Å—Ç—Ä–µ–ª –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–æ—Ä–∞–±–ª—å, —Ç–æ –∫–æ—Ä–∞–±–ª—å –ø–æ–º–µ—á–∞–µ—Ç—Å—è –∫–∞–∫ —Ä–∞–Ω–µ–Ω—ã–π, –∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Å—Ç—Ä–µ–ª—è—Ç—å –¥–æ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–º–∞—Ö–∞."
                "\n6.  –ï—Å–ª–∏ –≤—ã –ø–æ—Ç–æ–ø–∏–ª–∏ –∫–æ—Ä–∞–±–ª—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞, —Ç–æ –≤—Å–µ –æ–∫—Ä—É–∂–∞—é—â–∏–µ –∫–ª–µ—Ç–∫–∏ –≤–æ–∫—Ä—É–≥ –ø–æ—Ç–æ–ø–ª–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–∞–±–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–º–µ—á–∞—é—Ç—Å—è –∫–∞–∫ –ø—Ä–æ–º–∞—Ö."
                "\n7.  –í—ã–∏–≥—Ä—ã–≤–∞–µ—Ç —Ç–æ—Ç, –∫—Ç–æ –ø–µ—Ä–≤—ã–º –ø–æ—Ç–æ–ø–∏—Ç –≤—Å–µ –∫–æ—Ä–∞–±–ª–∏ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞."
                "\n\n–õ–µ–≥–µ–Ω–¥–∞:"
                "\n‚¨úÔ∏è ‚Äî –ü—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞"
                "\nüü© ‚Äî –ö–ª–µ—Ç–∫–∞ —Å –∫–æ—Ä–∞–±–ª–µ–º"
                "\n‚ùå ‚Äî –ö–ª–µ—Ç–∫–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –ø–æ–ø–∞–ª–∏"
                "\nüåÄ ‚Äî –ö–ª–µ—Ç–∫–∞, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–æ–º–∞—Ö–Ω—É–ª–∏—Å—å")

        msg = await message.answer(text=text)
        await state.update_data(old_message=msg.message_id)

    @staticmethod
    async def blackjack_rules(message: Message, state: FSMContext) -> None:
        await delete_previous_message(state, message)
        text = ("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –î–≤–∞–¥—Ü–∞—Ç—å –û–¥–Ω–æ!"
                "\n\n–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:"
                "\n\n–ï—Å–ª–∏ –ø–µ—Ä–≤—ã–µ –¥–≤–µ –∫–∞—Ä—Ç—ã –≤ —Å—É–º–º–µ –¥–∞—é—Ç 21 –æ—á–∫–æ, —Ç–æ —Ç–∞–∫–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –±–ª—ç–∫–¥–∂–µ–∫. –ï—Å–ª–∏ –¥–∏–ª–µ—Ä —Å–æ–±—Ä–∞–ª –±–ª—ç–∫–¥–∂–µ–∫, —Ç–æ –≤—Å–µ –∏–≥—Ä–æ–∫–∏ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é—Ç, –∫—Ä–æ–º–µ —Ç–µ—Ö, —É –∫–æ–≥–æ —Ç–æ–∂–µ –±–ª—ç–∫–¥–∂–µ–∫. –¢–∞–∫–æ–π —Å–ª—É—á–∞–π —Å—á–∏—Ç–∞–µ—Ç—Å—è –Ω–∏—á—å–µ–π, –∏ —Å—Ç–∞–≤–∫–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∏–≥—Ä–æ–∫—É."
                "\n\n–ï—Å–ª–∏ –∏–≥—Ä–æ–∫ —Å–æ–±—Ä–∞–ª –±–ª—ç–∫–¥–∂–µ–∫, –∞ –¥–∏–ª–µ—Ä –Ω–µ—Ç, —Ç–æ –∏–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç –∏ –ø–æ–ª—É—á–∞–µ—Ç –≤—ã–ø–ª–∞—Ç—É 3 –∫ 2 –æ—Ç —Å–≤–æ–µ–π —Å—Ç–∞–≤–∫–∏."
                "\n\n–¶–µ–ª—å –∏–≥—Ä–æ–∫–∞ - —Å–æ–±—Ä–∞—Ç—å —Ä—É–∫—É, —Å—É–º–º–∞ –æ—á–∫–æ–≤ –≤ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—É–º–º—É –æ—á–∫–æ–≤ —É –¥–∏–ª–µ—Ä–∞. –í–∞–∂–Ω–æ —Å–æ–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 21 –æ—á–∫–æ–≤, –≤ –∏–Ω–æ–º —Å–ª—É—á–∞–µ –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä–∞–µ—Ç (–ø–µ—Ä–µ–±–æ—Ä).")

        msg = await message.answer(text=text)
        await state.update_data(old_message=msg.message_id)
